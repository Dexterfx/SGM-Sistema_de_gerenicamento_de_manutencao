/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gerenciamanutencao;

import Modelo.Banco;
import javax.swing.table.DefaultTableModel;
import Modelo.cadastra;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author NASA-PC
 */
public final class tela extends javax.swing.JFrame {

    cadastra c = new cadastra();
    String codSelect; // guarda o código da linha selecionada na tabela manutenção
    String equipamentoSelect; // guarda o equipamento da linha selecionada na tabela manutenção

    /**
     * Creates new form tela
     */
    public tela() {
        initComponents();
        try {
            tabelaEquipamento(); // carrega as informações na tabela de equipamentos
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar tabela Equipamentos");
        }
        try {
            tabelaManutencao();
        } catch (SQLException ex) {// carrega as informações na tabela de manutenção
            JOptionPane.showMessageDialog(null, "Erro ao carregar tabela Manutencao");
        }
        trocar.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaEquipamento = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaManutencao = new javax.swing.JTable();
        Atualizar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        trocar = new javax.swing.JCheckBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        cadastraEquipamento = new javax.swing.JMenuItem();
        cadastraManutencao = new javax.swing.JMenuItem();

        jMenu1.setText("jMenu1");

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SGM - Sistema Gerenciador de Manutenção");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(241, 241, 241));

        jTabbedPane3.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane3.setFocusable(false);
        jTabbedPane3.setRequestFocusEnabled(false);
        jTabbedPane3.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane3StateChanged(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        jPanel4.setFocusable(false);
        jPanel4.setOpaque(false);
        jPanel4.setRequestFocusEnabled(false);

        tabelaEquipamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "COD", "Equipamento", "Proprietário", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaEquipamento.setColumnSelectionAllowed(true);
        tabelaEquipamento.setEnabled(false);
        tabelaEquipamento.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tabelaEquipamento);
        tabelaEquipamento.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 792, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
        );

        jTabbedPane3.addTab("Equipamentos", jPanel4);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));

        tabelaManutencao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "COD", "Equipamento", "Proprietário", "Total", "Data"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaManutencao.setFocusable(false);
        tabelaManutencao.setOpaque(false);
        tabelaManutencao.setRequestFocusEnabled(false);
        tabelaManutencao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaManutencaoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelaManutencao);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 792, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
        );

        jTabbedPane3.addTab("Manutenção", jPanel5);

        Atualizar.setBackground(new java.awt.Color(255, 255, 255));
        Atualizar.setText("Atualizar");
        Atualizar.setBorderPainted(false);
        Atualizar.setDefaultCapable(false);
        Atualizar.setFocusPainted(false);
        Atualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AtualizarActionPerformed(evt);
            }
        });

        jLabel1.setText("Veja os equipamentos cadastrados e manutenções.");

        trocar.setText("Realizar troca do equipamento selecionado");
        trocar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trocarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(trocar)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(109, 109, 109)
                        .addComponent(Atualizar))
                    .addComponent(jTabbedPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 799, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Atualizar)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(trocar)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        jMenuBar1.setFocusable(false);
        jMenuBar1.setOpaque(false);
        jMenuBar1.setRequestFocusEnabled(false);

        jMenu2.setText("Cadastrar");

        cadastraEquipamento.setText("Equipamento");
        cadastraEquipamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastraEquipamentoActionPerformed(evt);
            }
        });
        jMenu2.add(cadastraEquipamento);

        cadastraManutencao.setText("Manutenção");
        cadastraManutencao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastraManutencaoActionPerformed(evt);
            }
        });
        jMenu2.add(cadastraManutencao);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cadastraEquipamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastraEquipamentoActionPerformed
        new cadastraEquipamento().setVisible(true);
    }//GEN-LAST:event_cadastraEquipamentoActionPerformed

    private void cadastraManutencaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastraManutencaoActionPerformed
        new cadastrarManutencao().setVisible(true);
    }//GEN-LAST:event_cadastraManutencaoActionPerformed

    private void AtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AtualizarActionPerformed
        //para limpar a tabela de equipamentos
        DefaultTableModel tableModel = (DefaultTableModel) tabelaEquipamento.getModel();
        tableModel.setNumRows(0);

        //para limpar a tabela de equipamentos
        DefaultTableModel tableModel2 = (DefaultTableModel) tabelaManutencao.getModel();
        tableModel2.setNumRows(0);

        //atualiza a tabela
        try {
            tabelaEquipamento();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar tabela Equipamentos");
        }
        try {
            tabelaManutencao();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar tabela Manutencao");
        }
    }//GEN-LAST:event_AtualizarActionPerformed

    private void tabelaManutencaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaManutencaoMouseClicked

        trocar.setVisible(true);
   //clique duplo do mouse

      
        int linha_selecionada = tabelaManutencao.getSelectedRow(); // pegar a linha selecionada
        codSelect = (String) tabelaManutencao.getValueAt(linha_selecionada, 0);
        equipamentoSelect = (String) tabelaManutencao.getValueAt(linha_selecionada, 1);
        trocar.setSelected(false);//desmarca o checkbox
    }//GEN-LAST:event_tabelaManutencaoMouseClicked

    private void trocarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trocarActionPerformed

                DefaultTableModel tableModel2 = (DefaultTableModel) tabelaManutencao.getModel();
                tableModel2.setNumRows(0);
                try {
                    sugerirTroca(codSelect);
                    tabelaManutencao();
                    JOptionPane.showMessageDialog(null, "Realize a troca do equipamento: " + equipamentoSelect);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Erro trocar status\nErro: " + ex);
                }
                trocar.setVisible(false);//torna o checkbox invisível
    }//GEN-LAST:event_trocarActionPerformed

    private void jTabbedPane3StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane3StateChanged
        trocar.setVisible(false);//torna o checkbox "Trocar" invisível
        trocar.setSelected(false);//desmarca o checkbox
    }//GEN-LAST:event_jTabbedPane3StateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new tela().setVisible(true);
            }
        });
    }

    public void tabelaEquipamento() throws SQLException {//Carrega a tabela de equipamentos cadastrados
        String sql = "Select * from cadastro order by cod";
        ResultSet rs = null;
        try {
            rs = Banco.executaConsulta(sql);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao consultar o banco\nErro: " + ex);
        }
        while (rs.next()) {
            c.equipamento = rs.getString("equipamento");
            c.proprietario = rs.getString("proprietario");
            c.status = rs.getString("status");
            c.codigo = rs.getString("cod");
            Object equipamentos[] = {c.codigo, c.equipamento, c.proprietario, c.status};
            DefaultTableModel modelo;
            modelo = (DefaultTableModel) tabelaEquipamento.getModel();
            modelo.addRow(equipamentos);
        }

    }

    public void tabelaManutencao() throws SQLException {//Carrega a tabela de manutençao cadastradas
        String sql = "Select * from cadastro where total_man > 0 and status != 'Trocar' order by total_man DESC";
        ResultSet rs = null;
        try {
            rs = Banco.executaConsulta(sql);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao consultar o banco\nErro: " + ex);
        }
        while (rs.next()) {
            c.equipamento = rs.getString("equipamento");
            c.proprietario = rs.getString("proprietario");
            c.total = rs.getInt("total_man");
            c.codigo = rs.getString("cod");
            c.data = rs.getString("data_manutencao");
            Object equipamentos[] = {c.codigo, c.equipamento, c.proprietario, c.total, c.data};
            DefaultTableModel modelo;
            modelo = (DefaultTableModel) tabelaManutencao.getModel();
            modelo.addRow(equipamentos);
        }

    }

    public void sugerirTroca(String cod) throws SQLException {

        //Realiza a atualização no banco de dados
        String sql = "Update cadastro set status = 'Trocar' where cod = '" + cod + "'";
        System.out.println(sql);
        Banco.executarAtualizacao(sql);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Atualizar;
    private javax.swing.JMenuItem cadastraEquipamento;
    private javax.swing.JMenuItem cadastraManutencao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTable tabelaEquipamento;
    private javax.swing.JTable tabelaManutencao;
    private javax.swing.JCheckBox trocar;
    // End of variables declaration//GEN-END:variables
}
